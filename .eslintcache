[{"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/index.js":"1","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/reportWebVitals.js":"2","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/App.tsx":"3","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/serviceWorker.ts":"4","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Redux/rootReducer.ts":"5","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Redux/dishesReducer.ts":"6","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Redux/constants.ts":"7","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/MainPage.tsx":"8","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/DishList.tsx":"9","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/SearchBy.tsx":"10","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/Header.tsx":"11","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/Footer.tsx":"12","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Redux/actions.ts":"13","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/DishCard.tsx":"14","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/CategoriesList.tsx":"15","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/AreaList.tsx":"16","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/SeacrhDishForm.tsx":"17","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/utilities.ts":"18","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/DishDetail.tsx":"19"},{"size":813,"mtime":1607647459822,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1607644871002,"results":"22","hashOfConfig":"21"},{"size":512,"mtime":1607649253833,"results":"23","hashOfConfig":"21"},{"size":5294,"mtime":1607646006351,"results":"24","hashOfConfig":"21"},{"size":218,"mtime":1607646415464,"results":"25","hashOfConfig":"21"},{"size":2658,"mtime":1607646927257,"results":"26","hashOfConfig":"21"},{"size":612,"mtime":1607646486611,"results":"27","hashOfConfig":"21"},{"size":658,"mtime":1607648717968,"results":"28","hashOfConfig":"21"},{"size":1545,"mtime":1607648166106,"results":"29","hashOfConfig":"21"},{"size":1381,"mtime":1607648549859,"results":"30","hashOfConfig":"21"},{"size":1616,"mtime":1607650075100,"results":"31","hashOfConfig":"21"},{"size":468,"mtime":1607648195600,"results":"32","hashOfConfig":"21"},{"size":4357,"mtime":1607651531482,"results":"33","hashOfConfig":"21"},{"size":1627,"mtime":1607647827811,"results":"34","hashOfConfig":"21"},{"size":2085,"mtime":1607648517333,"results":"35","hashOfConfig":"21"},{"size":1743,"mtime":1607784338297,"results":"36","hashOfConfig":"21"},{"size":2023,"mtime":1607648824236,"results":"37","hashOfConfig":"21"},{"size":1284,"mtime":1607651591520,"results":"38","hashOfConfig":"21"},{"size":4286,"mtime":1607648060560,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"2d0dr2",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/index.js",[],["82","83"],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/reportWebVitals.js",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/App.tsx",[],["84","85"],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/serviceWorker.ts",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Redux/rootReducer.ts",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Redux/dishesReducer.ts",["86"],"import { API_STATUS_FAILURE, API_STATUS_STARTED, GET_CERTAIN_DISH_SUCCESS, GET_RANDOM_DISHES_SUCCESS, SEARCH_DISH_SUCCESS, GET_CATEGORIES, GET_AREA_LIST, API_SEARCH_BY_AREA_SUCCESS, API_SEARCH_BY_CATEGORY_SUCCESS } from \"./constants\"\nimport { DishActionInterfaces, DishInterface, CategoryInterface } from '../interfaces';\n\ninterface initialState {\n  loading: boolean,\n  error: any,\n  dishes: DishInterface[],\n  randomDishes: DishInterface[],\n  certainDish: any,\n  categories:  CategoryInterface[],\n  areaList:  string[],\n  dishesByCategory:  DishInterface[],\n  dishesByArea:  DishInterface[]\n}\n\nconst initialState : initialState = {\n  loading: false,\n  error: null,\n  dishes: [],\n  randomDishes: [],\n  certainDish: {},\n  categories: [],\n  areaList: [],\n  dishesByCategory: [],\n  dishesByArea: []\n}\n\nexport const dishesReducer = (state = initialState , action: DishActionInterfaces) => {\n  switch (action.type) {\n    case API_STATUS_STARTED: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case SEARCH_DISH_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        randomDishes: [],\n        dishesByArea: [],\n        dishesByCategory: [],\n        dishes: action.payload,\n      }\n    }\n    case GET_RANDOM_DISHES_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        dishes: [],\n        dishesByCategory: [],\n        dishesByArea: [],\n        certainDish: {},\n        randomDishes: action.payload\n      }\n    }\n    case GET_CERTAIN_DISH_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        certainDish: action.payload\n      }\n    }\n    case GET_CATEGORIES: {     \n      return {\n        ...state,\n        categories: action.payload,\n        error: null,\n      }\n    }\n    case GET_AREA_LIST: {\n      return {\n        ...state,\n        areaList: action.payload,\n        error: null\n      }\n    }\n    case API_STATUS_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n    }\n    case API_SEARCH_BY_AREA_SUCCESS: {\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        dishes: [],\n        certainDish: {},\n        dishesByCategory: [],\n        randomDishes: [],\n        dishesByArea: action.payload\n      }\n    }\n    case API_SEARCH_BY_CATEGORY_SUCCESS: {\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        dishes: [],\n        certainDish: {},\n        randomDishes: [],\n        dishesByArea: [],\n        dishesByCategory: action.payload\n      }\n    }\n    \n    default: return state\n  }\n}","/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Redux/constants.ts",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/MainPage.tsx",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/DishList.tsx",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/SearchBy.tsx",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/Header.tsx",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/Footer.tsx",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Redux/actions.ts",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/DishCard.tsx",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/CategoriesList.tsx",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/AreaList.tsx",["87"],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/SeacrhDishForm.tsx",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/utilities.ts",[],"/Users/vladimir/Downloads/frontend/portfolio/recipe-finder/src/Components/DishDetail.tsx",["88"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCertainDish } from '../Redux/actions';\nimport { RootState } from '../Redux/rootReducer';\nimport { Box, Container, makeStyles, Theme, Typography } from '@material-ui/core';\nimport Header from './Header';\nimport Footer from './Footer';\n\ninterface DishDetail {\n  match: any\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    paddingTop: theme.spacing(3)\n  },\n  dishName: {\n    fontWeight: 'bold',\n  },\n  dishCard: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    [theme.breakpoints.up('md')]: {\n      flexDirection: 'row',\n    },\n  },\n  img: {\n    display: 'block',\n    maxWidth: '100%',\n    height: 'auto',\n    objectFit: 'cover',\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '50%',\n      marginBottom: 0\n    },\n  },\n  textBlock: {\n    width: 'auto',\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '45%',\n    },\n  },\n  center: {\n    height: 'auto'\n  }, \n  instruction: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      textAlign: 'start',\n    },\n  },\n  ingredients: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2)\n  },\n  ingredientContainer: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  ingredientBlock: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  ingredientImg: {\n    width: '60px',\n    height: '60px',\n    [theme.breakpoints.up('xs')]: {\n      width: '75px',\n      height: '75px',\n    },\n  },\n  ingredientText: {\n    textAlign: 'center'\n  }\n}))\n\nconst DishDetail : React.FC<DishDetail> = ({match}) => {\n  const dispatch = useDispatch();\n  const certainDish = useSelector((state: RootState) => state.dishes.certainDish);\n  const ingridients = useSelector((state: RootState) => state.dishes.certainDish.ingridients);\n  const styles = useStyles();\n\n  useEffect(() => {\n    dispatch(getCertainDish(match.params.id))\n  }, [dispatch, match.params.id]);\n\n  return (\n    <div>\n      <Header isDishDetailPage={true}/>\n      {\n        (certainDish && ingridients) && (\n          <Container className={styles.container}>\n            <Typography variant=\"h3\" gutterBottom className={styles.dishName}>\n              {certainDish.strMeal}\n            </Typography>\n              <Box className={styles.dishCard}>\n                <img \n                  src={certainDish.strMealThumb} \n                  alt={`${certainDish.strMeal}`}\n                  className={styles.img}\n                />\n                <div className={styles.textBlock}>\n                  <div className={styles.center}>\n                    <Typography variant=\"h4\" className={styles.instruction}>\n                      Instructions\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      {certainDish.strInstructions}\n                    </Typography>\n                  </div>\n                </div>\n              </Box>\n              <Box className={styles.container}>\n                <Typography variant=\"h4\" className={styles.ingredients}>\n                  Ingredients\n                </Typography>\n                <Box className={styles.ingredientContainer}>\n                {\n                  ingridients.map((ingredient: string) => {\n                    return (\n                      <div className={styles.ingredientBlock} key={ingredient}>\n                        <img  \n                          src={`https://www.themealdb.com/images/ingredients/${ingredient}-Small.png`} \n                          alt={ingredient}\n                          className={styles.ingredientImg}\n                        />\n                        <Typography variant='caption' className={styles.ingredientText}>\n                          {ingredient}\n                        </Typography>\n                      </div>\n                    )\n                  })\n                }\n                </Box>\n              </Box>\n          </Container>\n        )\n      }\n      <Footer/>\n    </div>\n  )\n}\n\nexport default DishDetail;",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":16,"column":7,"nodeType":"95","messageId":"96","endLine":16,"endColumn":34},{"ruleId":"97","severity":1,"message":"98","line":8,"column":8,"nodeType":"95","messageId":"99","endLine":8,"endColumn":15},{"ruleId":"93","severity":1,"message":"100","line":85,"column":7,"nodeType":"95","messageId":"96","endLine":85,"endColumn":40},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"@typescript-eslint/no-redeclare","'initialState' is already defined.","Identifier","redeclared","@typescript-eslint/no-unused-vars","'america' is defined but never used.","unusedVar","'DishDetail' is already defined.","no-global-assign","no-unsafe-negation"]